.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.45.1.
.br
.TH GIT-TRUSTCHECK "1" "May 2014" "git-trustcheck 0.0.1" "User Commands"
.br
.SH NAME
.br
git-trustcheck \- git-trustcheck
.br

.br
.SH SYNOPSIS
.br
git\-trustcheck [\-h]
.br
[\-\-setup\-gpg\-home | \-\-unset\-gpg\-home | \-c | \-l | \-a ADD_KEY | \-E]
.br
[\-v | \-s] [\-e] [\-C RUN_PATH] [\-K KEYS_FILE]
.br
[\-G GPG_HOME] [\-\-disable\-gpgme] [\-\-version]
.br
[revision_query [revision_query ...]]
.br
.SH DESCRIPTION
.br

.br
Checks commits for having repo\-specific trusted gpg signature and outputs commits that are not trusted.
.br
Additionally supports managing of repo\-specific gpg homes.
.br
.PP
.br
The keyids are kept in REPO_ROOT/.git/trusted_keys one per line.
.br
Optionally they may be a gpg query (such as user@example.com) or * (for allowing all keys trusted by the gpg store).
.br
In the file '#' discards everything until the end of the line.
.br
.PP
.br
A repo\-specific gpg home can be created by \fB\-\-setup\-gpg\-home\fR.
.br
In this case the gpg home is put in REPO_ROOT/.git/gpg with a hardened gpg.conf, git is instructed to use gpg via the REPO_ROOT/.git/git_with_home script, which call gpg with the specific gpg home.
.br
.SH OPTIONS
.br
.TP
.br
revision_query
.br
revision range to check (default @{1}..@{0})
.br

.br
.TP
.br
\fB\-h\fR, \fB\-\-help\fR
.br
show this help message and exit
.br
.TP
.br
\fB\-\-setup\-gpg\-home\fR
.br
create repository specific gpg home
.br
\- creates .git/gpg or the `\-G' parameter
.br
\- creates script .git/gpg_with_home
.br
\- git config gpg.home and gpg.program
.br
\- creates git alias `gpg' for gpg.program
.br
.TP
.br
\fB\-\-unset\-gpg\-home\fR
.br
disable repository specific gpg home
.br
essentially undoes \fB\-\-setup\-gpg\-home\fR
.br
(no data is deleted)
.br
.TP
.br
\fB\-c\fR, \fB\-\-ignore\-child\-trust\fR
.br
by default if a child is trustworthy so is the parent
.br
(note that in this mode the git query is the one supplied to this program)
.br
.TP
.br
\fB\-l\fR, \fB\-\-list\-trusted\fR
.br
list trusted keys for this project
.br
.TP
.br
\fB\-a\fR ADD_KEY, \fB\-\-add\-key\fR ADD_KEY
.br
add key id or gpg query
.br
.TP
.br
\fB\-E\fR, \fB\-\-edit\-trusted\fR
.br
open the trusted keys file in an editor
.br
.TP
.br
\fB\-v\fR, \fB\-\-verbose\fR
.br
output additional information
.br
.TP
.br
\fB\-s\fR, \fB\-\-silent\fR
.br
do not show the summary header,
.br
do not show git query for the untrusted commits
.br
.TP
.br
\fB\-\-version\fR
.br
show program's version number and exit
.br

.br
.TP
.br
\fB\-e\fR, \fB\-\-exit\-code\fR
.br
exit with 0x01 if untrusted commits are found
.br
.TP
.br
\fB\-C\fR RUN_PATH
.br
run path, same as git \fB\-C\fR
.br
.TP
.br
\fB\-K\fR KEYS_FILE
.br
location of the keys file
.br
.TP
.br
\fB\-G\fR GPG_HOME
.br
gpg homedir, also can be set through $GNUPGHOME
.br
.TP
.br
\fB\-\-disable\-gpgme\fR
.br
disable gpgme,
.br
disables query to keyid and keyid to owner functionality
.br
.SH EXAMPLES
.br
.TP
.br
git trustcheck
.br
display the untrusted commits for the last HEAD change
.br

.br
.TP
.br
git trustcheck -c HEAD
.br
display all untrusted commits from the entire history to HEAD (including those with trusted children)
.br

.br
.TP
.br
git trustcheck --setup-gpg-home
.br
setup repo-specific gpg instance
.br

.br
.TP
.br
git trustcheck -a '*'
.br
all trusted keys are valid for this repo, useful with a per-repo gpg configuration
.br

.br
.TP
.br
git trustcheck -e -s
.br
display only untrusted commits and exit with code 1 if there are any
.br
.SH AUTHOR
.br
Tocho Tochev <tocho AT tochev DOT net>
.br
.SH COPYRIGHT
.br
Copyright (C) 2014 Tocho Tochev
.br
Distributed under the MIT licence.
.br
